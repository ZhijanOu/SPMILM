// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Copyright 2014-2015 Tsinghua University
// Author: wb.th08@gmail.com (Bin Wang), ozj@tsinghua.edu.cn (Zhijian Ou) 
//
// All h, cpp, cc, and script files (e.g. bat, sh, pl, py) should include the above 
// license declaration. Different coding language may use different comment styles.

/**
* \file
* \author WangBin
* \date 2016-05-20
* \brief redefine the common c operation for string, such as strdup, strcmp, strcpy.
*/
#ifndef _CU_STRING_CUH_
#define _CU_STRING_CUH_
#include "cu-def.cuh"

namespace cu
{
	/// strdup: create a string on device. The return string should be released by cudaFree()
	__host__ static char* strdup(const char *str)
	{
		int nLen = strlen(str);
		char *p;
		CUDA_CALL(cudaMalloc(&p, nLen + 1));
		CUDA_CALL(cudaMemcpy(p, str, nLen + 1, cudaMemcpyHostToDevice));
		return p;
	}
	/// free the string generated by strdup
	__host__ static void strfree(char *str)
	{
		CUDA_CALL(cudaFree(str));
	}
	/// strcmp
	__host__ __device__ static int strcmp(const char * str1, const char * str2)
	{
		char c1, c2;
		for (int i = 0;; ++i) {
			c1 = str1[i];
			c2 = str2[i];
			if (c1 == '\0' || c2 == '\0') {
				break;
			}

			if (c1 != c2) {
				break;
			}
		}
		return c1 - c2;
	}
	/// strcpy
	__host__ __device__ static void strcpy(char *str1, const char *str2)
	{
		char c;
		for (int i = 0;; ++i) {
			c = str2[i];
			str1[i] = c;
			if (c == '\0') {
				break;
			}
		}
	}
}

#endif